{"version":3,"sources":["pages/SignUp.js","pages/logIn.js","App.js","serviceWorker.js","index.js"],"names":["SignUp","state","email","password1","username","firstname","lastname","password2","terms","handleChange","bind","handleSubmit","e","target","value","type","checked","name","this","setState","preventDefault","console","log","data","axios","post","then","response","status","catch","error","className","onSubmit","htmlFor","id","placeholder","onChange","href","to","Component","LogIn","props","handlechange","event","password","onClick","App","exact","path","component","Program","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.61d1a526.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport{ Link } from 'react-router-dom';\n\nclass SignUp extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            email: '',\n            password1: '',\n            username: '',\n            firstname: '',\n            lastname: '',\n            password2: '',\n            terms: false\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n\n\n    handleChange(e) {\n        let target = e.target;\n        let value = target.type === 'checkbox' ? target.checked : target.value;\n        let name = target.name;\n\n        this.setState({\n          [name]: value,\n          \n        });\n    }\n\n    handleSubmit(e) {\n        e.preventDefault()\n        console.log('The form was submitted with the following data:');\n        console.log(this.state);\n        const data ={\n         \"username\":this.state.username,\n          \"password1\":this.state.password1,\n          \"password2\" :this.state.password2,\n          \"email\":this.state.email,\n          \"firstname\":this.state.firstname,\n          \"lastname\":this.state.lastname,\n          \"terms\":this.state.terms,\n        }\n       axios.post(\"http://127.0.0.1:8000/usermanagements/\", data)\n\n       .then(response =>{\n        console.log(response);\n        if(response.status === 201){\n        console.log(\"SignUp successful\");\n        }\n        else{\n        console.log(response)\n        };\n      })\n      .catch(error => {\n        console.log(error);\n      \n    });\n  \n}\n\n\n    render() {\n        return (\n        <div className=\"FormCenter\">\n          <h2><center>Sign Up</center></h2>\n            <form onSubmit={this.handleSubmit} className=\"FormFields\">\n            \n              <div className=\"FormField\">\n                <label className=\"FormField__Label\" htmlFor=\"name\">firstName</label> \n                <input type=\"text\" id=\"name\" className=\"FormField__Input\" placeholder=\"Enter your first name\" name=\"firstname\" value={this.state.firstname} onChange={this.handleChange} />\n              </div>\n              <div className=\"FormField\">\n                <label className=\"FormField__Label\" htmlFor=\"name\">lastName</label> \n                <input type=\"text\" id=\"name\" className=\"FormField__Input\" placeholder=\"Enter your first name\" name=\"lastname\" value={this.state.lastname} onChange={this.handleChange} />\n              </div>\n              <div className=\"FormField\">\n                <label className=\"FormField__Label\" htmlFor=\"name\">Username</label> \n                <input type=\"text\" id=\"name\" className=\"FormField__Input\" placeholder=\"Enter your first name\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\n              </div>\n              {/* <div className=\"FormField\">\n                <label className=\"FormField__Label\" htmlFor=\"lastName\">Last Name</label>\n                <input type=\"text\" id=\"lastName\" className=\"FormField__Input\" placeholder=\"Enter your last name\" name=\"lastName\" value={this.state.lastName} onChange={this.handleChange} />\n              </div> */}\n              <div className=\"FormField\">\n                <label className=\"FormField__Label\" htmlFor=\"email\">E-Mail Address</label>\n                <input type=\"email\" id=\"email\" className=\"FormField__Input\" placeholder=\"Enter your email\" name=\"email\" value={this.state.email} onChange={this.handleChange} />\n              </div>\n              <div className=\"FormField\">\n                <label className=\"FormField__Label\" htmlFor=\"Password1\">Password</label>\n                <input type=\"password\" id=\"Password1\" className=\"FormField__Input\" placeholder=\"Enter your password\" name=\"password1\" value={this.state.password1} onChange={this.handleChange} />\n              </div>\n              <div className=\"FormField\">\n                <label className=\"FormField__Label\" htmlFor=\"Password2\">Confirm Password</label>\n                <input type=\"password\" id=\"Password2\" className=\"FormField__Input\" placeholder=\"Confirm your password\" name=\"password2\" value={this.state.password2} onChange={this.handleChange} />\n              </div>\n              {/* <div className=\"FormField\">\n                <label className=\"FormField__Label\" htmlFor=\"confirmPassword\">Confirm Password</label>\n                <input type=\"password\" id=\"confirmPassword\" className=\"FormField__Input\" placeholder=\"Confirm your password\" name=\"confirmPassword\" value={this.state.confirmPassword} onChange={this.handleChange} />\n              </div> */}\n        \n\n              <div className=\"FormField\">\n                <label className=\"FormField__CheckboxLabel\">\n                    <input className=\"FormField__Checkbox\" type=\"checkbox\" name=\"terms\" value={this.state.terms} onChange={this.handleChange} /> I agree all statements in <a href=\"\" className=\"FormField__TermsLink\">terms of service</a>\n                </label>\n              </div>\n\n              <div className=\"FormField\">\n                  <button className=\"FormField__Button mr-20\"><Link to = \"/\">Sign Up</Link></button> \n                  {/* <Link to=\"/sign-in\" className=\"FormField__Link\">I'm already member</Link> */}\n              </div>\n              {/* <div class=\"social-container\">\n                <h3>SignUp with your Social media platform</h3>\n                <a \n                   className=\"facebook social\">\n                   <FontAwesomeIcon icon={faFacebook} size=\"2x\" />\n                </a>\n                <a className=\"twitter social\">\n                   <FontAwesomeIcon icon={faTwitter} size=\"2x\" />\n                </a>\n                <a\n                   className=\"instagram social\">\n                   <FontAwesomeIcon icon={faInstagram} size=\"2x\" />\n                </a>\n                </div> */}\n            </form>\n          </div>\n        );\n    }\n}\n\nexport default SignUp;","import React, { Component } from 'react'\nimport axios from 'axios'\nimport{ Link , Redirect} from 'react-router-dom';\n\n\nexport default class LogIn extends Component {\n\n \n\nconstructor(props) {\n  super(props)\n\n  this.state = {\n     username:\"\",\n     password:\"\"\n  }\n}\n\n\n//handle text change\n\nhandlechange= (event)=>{\n  const  {name,value} = event.target\n  this.setState({\n    [name]:value,\n      })\n}\n\n//Submit form action\n\nhandleSubmit = (e)=>{\n  e.preventDefault()\n  const data = {\n    \"username\": this.state.username,\n    \"password\":this.state.password,\n  }\n\n  axios.post(\"http://127.0.0.1:8000/api/login/\", data)\n  .then(function (response) {\n    console.log(response);\n    if(response.status === 200){\n       console.log(\"Login successfull\");\n       }\n       else{\n         console.log(response.data)\n       };\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n\n}\n\n\n  render() {\n    return (\n    <section className=\"form\">\n\n  <h2>Login</h2>\n  \n      <form >\n      \n        <input onChange={this.handlechange} placeholder=\"Username\" type=\"text\" name=\"username\"></input>\n      \n        <input onChange={this.handlechange} placeholder=\"Password\" type=\"password\" name=\"password\"></input><br></br>\n\n        <button onClick={this.handleSubmit} type=\"submit\">Login</button><br></br>\n        <a href=\"/\">Forgot Password ?</a>\n        {/* <p style={{textAlign:\"center\"}}>Or</p> */}<br></br>\n        <button id=\"Signup\"><Link to = \"/signup\">Sign Up</Link></button>\n      </form>\n\n</section>\n    )\n\n\n  }\n}\n","import React, { Component } from 'react';\nimport SignUp from './pages/SignUp';\nimport LogIn from './pages/logIn';\nimport Program from './pages/Program';\nimport{\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Switch\n} from 'react-router-dom';\nimport './App.css';\n\n//import SocialLogIn from './SocialLogIn';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"Body\">\n          <Route exact path=\"/\" component={LogIn}/>\n        </div>\n        <div className=\"App\">\n          <div className=\"App__Form\">\n        <Route exact path=\"/signup\" component={SignUp}/>\n        <Route exact path=\"/program\" component={Program}/>\n        </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}